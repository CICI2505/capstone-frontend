{"ast":null,"code":"import api from '../../lib/axiosInstance';\nconst mapBackendError = msg => {\n  const normalized = msg.toLowerCase();\n  if (normalized.includes(\"tidak ditemukan\")) return \"EMAIL_NOT_FOUND\";\n  if (normalized.includes(\"password\") && normalized.includes(\"salah\")) return \"WRONG_PASSWORD\";\n  if (normalized.includes(\"wajib diisi\")) return \"EMPTY_FIELDS\";\n  return \"UNKNOWN_ERROR\";\n};\n\n/**\n * Login user dan simpan data ke localStorage\n * @param {Object} credentials - { email, password }\n * @returns {Object} - { success, token, user, message } atau error info\n */\nexport const loginUser = async ({\n  email,\n  password\n}) => {\n  try {\n    const {\n      data\n    } = await api.post('/api/auth/login', {\n      email,\n      password\n    });\n    const {\n      token,\n      user,\n      message\n    } = data;\n    if (!token || !(user !== null && user !== void 0 && user.id)) {\n      return {\n        success: false,\n        errorCode: \"INVALID_RESPONSE\",\n        errorMessage: \"Respon login tidak lengkap\"\n      };\n    }\n\n    // ✅ Simpan ke localStorage\n    localStorage.setItem('token', token);\n    localStorage.setItem('user_id', user.id);\n    localStorage.setItem('profile', JSON.stringify(user));\n    return {\n      success: true,\n      token,\n      user,\n      message\n    };\n  } catch (err) {\n    var _err$response, _err$response$data;\n    const msg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Login gagal\";\n    return {\n      success: false,\n      errorCode: mapBackendError(msg),\n      errorMessage: msg\n    };\n  }\n};","map":{"version":3,"names":["api","mapBackendError","msg","normalized","toLowerCase","includes","loginUser","email","password","data","post","token","user","message","id","success","errorCode","errorMessage","localStorage","setItem","JSON","stringify","err","_err$response","_err$response$data","response"],"sources":["C:/capstone-project-CC25-CF295-main/frontend/src/services/auth/loginUser.js"],"sourcesContent":["import api from '../../lib/axiosInstance';\n\nconst mapBackendError = (msg) => {\n  const normalized = msg.toLowerCase();\n  if (normalized.includes(\"tidak ditemukan\")) return \"EMAIL_NOT_FOUND\";\n  if (normalized.includes(\"password\") && normalized.includes(\"salah\")) return \"WRONG_PASSWORD\";\n  if (normalized.includes(\"wajib diisi\")) return \"EMPTY_FIELDS\";\n  return \"UNKNOWN_ERROR\";\n};\n\n/**\n * Login user dan simpan data ke localStorage\n * @param {Object} credentials - { email, password }\n * @returns {Object} - { success, token, user, message } atau error info\n */\nexport const loginUser = async ({ email, password }) => {\n  try {\n    const { data } = await api.post('/api/auth/login', { email, password });\n\n    const { token, user, message } = data;\n\n    if (!token || !user?.id) {\n      return {\n        success: false,\n        errorCode: \"INVALID_RESPONSE\",\n        errorMessage: \"Respon login tidak lengkap\",\n      };\n    }\n\n    // ✅ Simpan ke localStorage\n    localStorage.setItem('token', token);\n    localStorage.setItem('user_id', user.id);\n    localStorage.setItem('profile', JSON.stringify(user));\n\n    return {\n      success: true,\n      token,\n      user,\n      message,\n    };\n  } catch (err) {\n    const msg = err.response?.data?.message || \"Login gagal\";\n    return {\n      success: false,\n      errorCode: mapBackendError(msg),\n      errorMessage: msg,\n    };\n  }\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,yBAAyB;AAEzC,MAAMC,eAAe,GAAIC,GAAG,IAAK;EAC/B,MAAMC,UAAU,GAAGD,GAAG,CAACE,WAAW,CAAC,CAAC;EACpC,IAAID,UAAU,CAACE,QAAQ,CAAC,iBAAiB,CAAC,EAAE,OAAO,iBAAiB;EACpE,IAAIF,UAAU,CAACE,QAAQ,CAAC,UAAU,CAAC,IAAIF,UAAU,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,gBAAgB;EAC5F,IAAIF,UAAU,CAACE,QAAQ,CAAC,aAAa,CAAC,EAAE,OAAO,cAAc;EAC7D,OAAO,eAAe;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAO;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACtD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,iBAAiB,EAAE;MAAEH,KAAK;MAAEC;IAAS,CAAC,CAAC;IAEvE,MAAM;MAAEG,KAAK;MAAEC,IAAI;MAAEC;IAAQ,CAAC,GAAGJ,IAAI;IAErC,IAAI,CAACE,KAAK,IAAI,EAACC,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEE,EAAE,GAAE;MACvB,OAAO;QACLC,OAAO,EAAE,KAAK;QACdC,SAAS,EAAE,kBAAkB;QAC7BC,YAAY,EAAE;MAChB,CAAC;IACH;;IAEA;IACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAER,KAAK,CAAC;IACpCO,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEP,IAAI,CAACE,EAAE,CAAC;IACxCI,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,CAAC;IAErD,OAAO;MACLG,OAAO,EAAE,IAAI;MACbJ,KAAK;MACLC,IAAI;MACJC;IACF,CAAC;EACH,CAAC,CAAC,OAAOS,GAAG,EAAE;IAAA,IAAAC,aAAA,EAAAC,kBAAA;IACZ,MAAMtB,GAAG,GAAG,EAAAqB,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcd,IAAI,cAAAe,kBAAA,uBAAlBA,kBAAA,CAAoBX,OAAO,KAAI,aAAa;IACxD,OAAO;MACLE,OAAO,EAAE,KAAK;MACdC,SAAS,EAAEf,eAAe,CAACC,GAAG,CAAC;MAC/Be,YAAY,EAAEf;IAChB,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}