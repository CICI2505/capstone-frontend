{"ast":null,"code":"import api from'../../lib/axiosInstance';export const getReport=async(token,period)=>{try{const res=await api.get('/api/transactions',{headers:{Authorization:\"Bearer \".concat(token)},params:{period}});return res.data.transactions;}catch(error){var _error$response,_error$response$data;throw((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||error.message;}};","map":{"version":3,"names":["api","getReport","token","period","res","get","headers","Authorization","concat","params","data","transactions","error","_error$response","_error$response$data","response","message"],"sources":["C:/capstone-project-CC25/frontend/src/services/report/report.js"],"sourcesContent":["import api from '../../lib/axiosInstance';\n\nexport const getReport = async (token, period) => {\n  try {\n    const res = await api.get('/api/transactions', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      params: { period },\n    });\n    return res.data.transactions;\n  } catch (error) {\n    throw error.response?.data?.message || error.message;\n  }\n};"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,yBAAyB,CAEzC,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAAA,CAAOC,KAAK,CAAEC,MAAM,GAAK,CAChD,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAJ,GAAG,CAACK,GAAG,CAAC,mBAAmB,CAAE,CAC7CC,OAAO,CAAE,CACPC,aAAa,WAAAC,MAAA,CAAYN,KAAK,CAChC,CAAC,CACDO,MAAM,CAAE,CAAEN,MAAO,CACnB,CAAC,CAAC,CACF,MAAO,CAAAC,GAAG,CAACM,IAAI,CAACC,YAAY,CAC9B,CAAE,MAAOC,KAAK,CAAE,KAAAC,eAAA,CAAAC,oBAAA,CACd,KAAM,EAAAD,eAAA,CAAAD,KAAK,CAACG,QAAQ,UAAAF,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBH,IAAI,UAAAI,oBAAA,iBAApBA,oBAAA,CAAsBE,OAAO,GAAIJ,KAAK,CAACI,OAAO,CACtD,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}