{"ast":null,"code":"import api from '../../lib/axiosInstance';\nexport const addTransaction = async transactionData => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await api.post('/api/transactions', transactionData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Gagal menambahkan transaksi');\n  }\n};","map":{"version":3,"names":["api","addTransaction","transactionData","token","localStorage","getItem","response","post","headers","Authorization","data","error","_error$response","_error$response$data","Error","message"],"sources":["C:/capstone-project-CC25-CF295-main/frontend/src/services/transaction/transaction.js"],"sourcesContent":["import api from '../../lib/axiosInstance';\n\nexport const addTransaction = async (transactionData) => {\n  const token = localStorage.getItem('token');\n\n  try {\n    const response = await api.post('/api/transactions', transactionData, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.message || 'Gagal menambahkan transaksi');\n  }\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,yBAAyB;AAEzC,OAAO,MAAMC,cAAc,GAAG,MAAOC,eAAe,IAAK;EACvD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,mBAAmB,EAAEL,eAAe,EAAE;MACpEM,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUN,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACL,QAAQ,cAAAM,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,6BAA6B,CAAC;EACjF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}